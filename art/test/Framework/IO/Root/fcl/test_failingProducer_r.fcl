#include "messageDefaults.fcl"

services:
{
  # Always-present services; configuration optional.
  FloatingPointControl: { }

  scheduler:  # options block in the old system
  {
    Rethrow: ['OtherArt','StdException','Unknown','BadAlloc',
              'BadExceptionType','DictionaryNotFound',
              'ProductPutFailure','Configuration','LogicError','UnimplementedFeature',
              'InvalidReference','NullPointerError','NoProductSpecified','EventTimeout',
              'DataCorruption','ScheduleExecutionFailure','EventProcessorFailure',
              'FileInPathError','FileOpenError','FileReadError','FatalRootError',
              'MismatchedInputFiles','ProductDoesNotSupportViews',
              'ProductDoesNotSupportPtr','NotFound']
    FailModule: [ 'ProductNotFound' ]
    wantSummary: true
  }
}

services.message: @local::messageDefaults

physics:
{

  producers:
  {
    f1:
    {
      module_type: FailingProducer
    }
  }


  analyzers:
  {
    a1:
    {
      module_type: IntTestAnalyzer
      input_label: m1a
      expected_value: 1
    }
  }

   e1: [ a1, out1 ]
   p1: [ f1 ]
}

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName: "outCloned.root"
  }
}

source:
{
  module_type: RootInput
  fileNames: [ "out.root" ]
}

process_name: DEVELr
