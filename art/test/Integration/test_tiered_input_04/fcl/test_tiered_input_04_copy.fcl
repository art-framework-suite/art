process_name: READ

source: {
    module_type: RootInput
    fileNames: [
        "../test_tiered_input_04d1_t.d/f41.root",
        "../test_tiered_input_04d2_t.d/f42.root",
        "../test_tiered_input_04d3_t.d/f43.root"
    ]
    secondaryFileNames: [
        {
          a: "../test_tiered_input_04d1_t.d/f41.root"
          b: ["../test_tiered_input_04c1_t.d/f31.root", "../test_tiered_input_04b1_t.d/f21.root", "../test_tiered_input_04a1_t.d/f11.root"]
        },
        {
          a: "../test_tiered_input_04d2_t.d/f42.root"
          b: ["../test_tiered_input_04c2_t.d/f32.root", "../test_tiered_input_04b2_t.d/f22.root", "../test_tiered_input_04a2_t.d/f12.root"]
        },
        {
          a: "../test_tiered_input_04d3_t.d/f43.root"
          b: ["../test_tiered_input_04c3_t.d/f33.root", "../test_tiered_input_04b3_t.d/f23.root", "../test_tiered_input_04a3_t.d/f13.root"]
        }
    ]
}

outputs: {
    out1: {
        module_type: RootOutput
        fileName: "out1.root"
        fastCloning: true
    }
}

physics: {
  analyzers: {
    a1: {
      module_type: IntTestAnalyzer
      input_label: m1a
      expected_value: 1
    }
    a2: {
      module_type: IntTestAnalyzer
      input_label: m2a
      expected_value: 2
    }
    a3: {
      module_type: IntTestAnalyzer
      input_label: m3a
      expected_value: 3
    }
  }
  e1: [ a3, a2, a1, out1 ]
  end_paths: [ e1 ]
}
