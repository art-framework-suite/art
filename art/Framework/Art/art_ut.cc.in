// vim: set sw=2 expandtab :
#define BOOST_TEST_ALTERNATIVE_INIT_API
#undef BOOST_TEST_MAIN
#define BOOST_TEST_NO_MAIN
#include "cetlib/quiet_unit_test.hpp"

#include "art/Framework/Art/@ART_MAIN_FUNC@.h"

using namespace boost::unit_test;

#include <cstdlib>
#include <cstring>

void art_ut()
{
  int app_return_val = @ART_MAIN_FUNC@(framework::master_test_suite().argc,
                                       framework::master_test_suite().argv);
  BOOST_REQUIRE_EQUAL(app_return_val, 0);
}

bool
init_unit_test_suite()
{
  //framework::master_test_suite().add(BOOST_TEST_CASE(&art_ut));
  auto ts = BOOST_TEST_SUITE("art_ut");
  ts->add(BOOST_TEST_CASE(&art_ut));
  framework::master_test_suite().add(ts);
  return true;
}

int
main(int argc, char* argv[])
{
  char const* cmp = "-c";
  char to[] = "--config";
  for (int i = 0; i < argc; ++i) {
    if (strncmp(cmp, argv[i], 2) == 0) {
      argv[i] = to;
      break;
    }
  }
  auto ret = unit_test_main(&init_unit_test_suite, argc, argv);
  return ret;
}

// Local Variables:
// mode: c++
// End:
